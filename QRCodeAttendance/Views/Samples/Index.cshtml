@model IEnumerable<Sample>

@{
    ViewData["Title"] = "Student's Database";
    ViewData["ActivePage"] = ManageSidebar.Student;
}

@{
    bool recordsExist;

    if (Model.Any())
    {
        recordsExist = true;
    }
    else
    {
        recordsExist = false;
    }
}

<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />
<!-- Confirm Delete Modal -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalCenterTitle">Confirm Deletion</h5>
                <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">Are you sure you want to delete the selected records?</div>
            <div class="modal-footer">
                <button class="btn btn-secondary" type="button" data-bs-dismiss="modal">Close</button>
                <button class="btn btn-danger" type="button" id="confirmDeleteButton">Delete</button>
            </div>
        </div>
    </div>
</div>
<partial name="_NewNavbar" />
<div id="layoutSidenav">
    <partial name="_NewSidenav" />
    <div id="layoutSidenav_content">
        <main>
            <header class="page-header page-header-compact page-header-light border-bottom bg-white mb-4">
                <partial name="_Notification" />
                <div class="container-fluid px-4">
                    <div class="page-header-content">
                        <div class="row align-items-center justify-content-between pt-3">
                            <div class="col-auto mb-3">
                                <h1 class="page-header-title">
                                    <div class="page-header-icon"><i data-feather="database"></i></div>
                                    Student's Database
                                </h1>
                            </div>
                            <div class="col-12 col-xl-auto mb-3">
                                <button class="btn btn-sm btn-light text-primary" type="button" data-bs-toggle="modal" data-bs-target="#createStudentModal">
                                    <i class="me-1" data-feather="plus"></i>
                                    Student
                                </button>
                                <button class="btn btn-sm btn-light text-primary" type="button" data-bs-toggle="modal" data-bs-target="#bulkImportModal">
                                    <i class="me-1" data-feather="upload"></i>
                                    Import
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </header>
            <!-- Main page content-->
            <div class="container-xl px-4 mt-4">
                @if (recordsExist)
                {
                    <button class="btn btn-sm btn-red-soft text-danger" id="deleteButton" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal" disabled>
                        <i class="me-1" data-feather="trash"></i>
                        Delete
                    </button>
                }
                <!-- DataTales Example -->
                <div class="mb-4 mt-2">
                    <div class="card-body">
                        <div id="preload" class="d-flex justify-content-center align-items-center">
                            <div class="text-center">
                                <div class="sr-only spinner-border" role="status">
                                    <span class="sr-only"></span>
                                </div>
                            </div>
                        </div>
                        <div class="table-responsive">
                            <table class="table table-bordered" id="example1" width="100%" cellspacing="0">
                                @if (Model.Count() == 0)
                                {
                                    <thead class="text-center">
                                        <tr>
                                            <th></th>
                                            <th>Profile</th>
                                            <th>Student No.</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                }
                                else
                                {
                                    <thead class="text-center">
                                        <tr>
                                            <th>
                                                <input type="checkbox" class="form-check-input" id="selectAllCheckBox" />
                                            </th>
                                            <th>Profile</th>
                                            <th>Student No.</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody style="max-height:40px; min-height:40px">
                                        @foreach (var user in Model)
                                        {
                                            <tr class="text-center">
                                                <td><input type="checkbox" class="form-check-input recordCheckBox" name="selectedIds" value="@user.Id" data-id="@user.Id" /></td>
                                                <td>
                                                    <a class="text-dark" href="#" data-bs-toggle="modal" data-bs-target="#detailsModal_@user.Id">
                                                    <div class="d-flex align-items-center">
                                                        <div class="avatar me-2"><img class="avatar-img img-fluid" src="~/profile/@user.ImageUrl" /></div>
                                                        @user.FirstName @user.MiddleName @user.LastName
                                                    </div>
                                                    </a>
                                                </td>
                                                <td><code>@user.Code</code></td>
                                                <td>
                                                    <a class="btn btn-datatable btn-icon btn-transparent-dark" href="#" data-bs-toggle="modal" data-bs-target="#detailsModal_@user.Id"><i data-feather="info"></i></a>
                                                    <a class="btn btn-datatable btn-icon btn-transparent-dark" data-bs-toggle="modal" data-bs-target="#editARModal_@user.Id"><i data-feather="edit"></i></a>
                                                    <a class="btn btn-datatable btn-icon btn-transparent-dark" href="#" data-bs-toggle="modal" data-bs-target="#deleteModal_@user.Id"><i data-feather="trash-2"></i></a>
                                                </td>
                                            </tr>
                                            <!--Delete Modal -->
                                            <div class="modal fade" id="deleteModal_@user.Id" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                                                <div class="modal-dialog modal-dialog-centered" role="document">
                                                    <div class="modal-content">
                                                        <div class="modal-header">
                                                            <h5 class="modal-title" id="exampleModalCenterTitle">Delete Student</h5>
                                                            <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
                                                        </div>
                                                        <div class="modal-body">Are you sure you want to delete <code>@user.Code</code>?</div>
                                                        <div class="modal-footer">
                                                            <button class="btn btn-secondary" type="button" data-bs-dismiss="modal">Close</button>
                                                            <form class="form-inline" asp-action="Delete" asp-route-id="@user.Id" method="post">
                                                                <button type="submit" class="btn btn-primary">Delete</button>
                                                            </form>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </tbody>
                                }
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            @await Component.InvokeAsync("Details")
            @await Component.InvokeAsync("BulkImport")
            @await Component.InvokeAsync("CreateStudentModal")
            @await Component.InvokeAsync("EditStudentModal")
        </main>
        <partial name="_NewFooter" />
    </div>
</div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Get references to all the "generate PDF" buttons
        const generatePDFButtons = document.querySelectorAll('.generate-pdf-button');

        // Define the options for generating the PDF
        const pdfOptions = {
            margin: 0.5,
            filename: 'id-card.pdf',
            image: { type: 'jpeg', quality: 1 },
            html2canvas: { scale: 2 },
            jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' }
        };

        // Function to generate and save the PDF for a specific user
        function generatePDFForUser(userId) {
            const elementToPrint = document.getElementById(`element-to-print_${userId}`);
            html2pdf().set(pdfOptions).from(elementToPrint).save();
        }

        // Add a click event listener to each "generate PDF" button
        generatePDFButtons.forEach(button => {
            button.addEventListener('click', function () {
                const userId = this.getAttribute('data-id');
                generatePDFForUser(userId);
                toastr.success('PDF Generate successfully.')
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            // Function to enable or disable the "Delete" button based on selection
            function toggleDeleteButton() {
                if ($(".recordCheckBox:checked").length > 0) {
                    $("#deleteButton").prop("disabled", false);
                } else {
                    $("#deleteButton").prop("disabled", true);
                }

                // Check the "Select All" checkbox when all checkboxes are manually checked
                if ($(".recordCheckBox:checked").length === $(".recordCheckBox").length) {
                    $("#selectAllCheckBox").prop("checked", true);
                } else {
                    $("#selectAllCheckBox").prop("checked", false);
                }
            }

            $("#selectAllCheckBox").click(function () {
                $(".recordCheckBox").prop("checked", $(this).prop("checked"));
                toggleDeleteButton();
            });

            $(".recordCheckBox").click(function () {
                toggleDeleteButton();
            });

            $("#deleteButton").click(function () {
                deleteSelectedRecords();
            });

            function deleteSelectedRecords() {
                var selectedIds = [];
                $(".recordCheckBox:checked").each(function () {
                    selectedIds.push($(this).data("id"));
                });

                if (selectedIds.length === 0) {
                    alert("Select at least one record to delete.");
                    return;
                }

                $("#confirmDeleteModal").modal("show");

                $("#confirmDeleteButton").click(function () {
                    $.ajax({
                        type: "POST",
                        url: "/Samples/DeleteSelected",
                        data: { selectedIds: selectedIds },
                        success: function (data) {
                            if (data.success) {
                                location.reload();
                            } else {
                                alert("Error deleting selected records.");
                            }
                        }
                    });

                    $("#confirmDeleteModal").modal("hide");
                });
            }
        });
    </script>

    <!-- QR Code -->
    <script src="~/js/qrcode/qrcode.min.js" asp-append-version="true"></script>
    
    @foreach(var user in Model)
    {
        
        <script type="text/javascript">
            var qrcode = new QRCode(document.getElementById("qrcode_@user.Id"), {
                width: 288,
                height: 288,
                colorDark: "#000000",
                colorLight: "#ffffff",
                correctLevel: QRCode.CorrectLevel.H
            });

            function makeCode() {
                var elText = document.getElementById("text_@user.Id");

                if (!elText.value) {
                    alert("Input a text");
                    elText.focus();
                    return;
                }

                qrcode.makeCode(elText.value);
            }

            makeCode();

            $("#text_@user.Id").
                on("blur", function () {
                    makeCode();
                }).
                on("keydown", function (e) {
                    if (e.keyCode == 13) {
                        makeCode();
                    }
                });

            function downloadQRCode() {
                const qrCodeDiv = document.getElementById('qrcode_@user.Id');
                const qrCodeImage = qrCodeDiv.querySelector('canvas');
                if (!qrCodeImage) {
                    console.error('QR code image not found.');
                    return;
                }
                const desiredWidth = 100; // Set your desired width (in pixels)
                const desiredHeight = 100; // Set your desired height (in pixels)

                qrCodeImage.width = desiredWidth;
                qrCodeImage.height = desiredHeight;
                const link = document.createElement('a');
                link.download = @user.Code + '_QRCode.png'; // You can set the filename here
                link.href = qrCodeImage.toDataURL();
                link.click();
            }
        </script>
    }
    
}
